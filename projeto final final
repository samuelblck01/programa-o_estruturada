/* ************* VARIÁVEIS GLOBAIS ********* */

let estoque = [];
let usuarios = [];
let fornecedores = [];

/* ************* FUNÇÕES ********* */


function cadastrarUsuarios() {
        for (let i = 0; ; i++) { // Remova a condição de parada do loop
            if (i >= 6) { // Verifica se i atingiu o limite de 6 usuários
                break; // Sai do loop
            }
    
            let usuario = {
                nomeDoUsuario: prompt("Digite seu nome:"),
                cpf: prompt("Digite seu CPF:"),
                email: prompt("Digite seu Email:"),
                senha: prompt("Crie sua senha:"),
                cargo: prompt("Digite seu cargo:")
            };
            usuarios.push(usuario);
            console.log("Usuário cadastrado com sucesso:", usuario);
        }
        
        
        console.log("Usuário cadastrado com sucesso:", usuario);
    }
    

usuarios.push(cadastrarUsuarios.usuario);

function validarEmail(email) {
    var regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
}

function validarSenha(senha) {
    return senha.length >= 8;
}

function listarUsuarios() {
    console.log("Lista de usuários:");
    usuarios.forEach(usuario => {
        console.log(usuario);
    });
}

function removerUsuario() {
    let IDusuario = prompt("Qual o ID do usuário que será removido : ");
    usuarios.splice(IDusuario, 1);
    console.log(`O usuário de ID: ${IDusuario} foi removido com sucesso.`);
}

function alterarDadoUsuario() {
    let IDusuario = prompt("Qual é o ID do usuário que desejas alterar :");
    let usuarioModificado = {
        nomeDoUsuario: prompt("Qual o novo nome:"),
        cpf: prompt("Qual o novo cpf:"),
        email: prompt("Qual o novo email:"),
        senha: prompt("Qual o novo senha:"),
        cargo: prompt("Qual o novo cargo:")
    };

    usuarios[IDusuario] = usuarioModificado;
    console.log("Usuário alterado com sucesso:", usuarioModificado);
}

function logarUsuario() {
    let loginusuario = prompt("Qual seu email :")
    let loginsenha = prompt("Qual sua senha: ")

    for (let i = 0; i < usuarios.length; i++) {
        if (usuarios[i].email === loginusuario && usuarios[i].senha === loginsenha) {
            console.log("login válido. Acesso permitido.");
            return;
        }
    }
    console.log("Login inválido. Acesso negado.");
}

function adicionarProduto() {
    let produto = {
        nome: prompt("Qual o nome do produto :"),
        peso: prompt("Qual o peso do produto :"),
        setor: prompt("Qual o setor do produto :"),
        marca: prompt("Qual a marca do produto :"),
        validade: prompt("Qual a validade do produto :"),
        quantidade: prompt("Qual a quantidade desse produto : ")
    };
    estoque.push(produto);
    console.log("Produto adicionado com sucesso:", produto);
}

function validadeIndividual() {
    let nome = prompt("Digite o nome do produto para consultar sua validade:");
    for (let i = 0; i < estoque.length; i++) {
        if (estoque[i].nome === nome) {
            return `A validade do produto ${nome} é ${estoque[i].validade}`;
        }
    }
    return `Produto ${nome} não encontrado no estoque`;
}

function imprimirRelatorioValidades() {
    console.log("Validades dos produtos em estoque:");
    estoque.forEach(produto => {
        console.log(`${produto.nome} (${produto.marca}, ${produto.setor}): ${produto.validade}`);
    });
}

function removerProduto() {
    let nome = prompt("Digite o nome do produto que deseja remover:");
    for (let i = 0; i < estoque.length; i++) {
        if (estoque[i].nome === nome) {
            estoque.splice(i, 1);
            console.log(`O Produto ${nome} foi removido com sucesso.`);
            return;
        }
    }
    console.log(`Produto ${nome} não encontrado.`);
}

function atualizarQuantidade() {
    let nome = prompt("Digite o nome do produto para atualizar sua quantidade:");
    let novaQuantidade = parseInt(prompt("Digite a nova quantidade do produto:"));

    for (let i = 0; i < estoque.length; i++) {
        if (estoque[i].nome === nome) {
            estoque[i].quantidade = novaQuantidade;
            console.log(`Quantidade do produto ${nome} modificada para ${novaQuantidade}`);
            return;
        }
    }
    console.log(`Produto ${nome} não encontrado.`);
}

function cadastrarFornecedor() {
    let fornecedor = {
        nomeDaEmpresa: prompt("Qual o nome da empresa"),
        cnpj: prompt("Qual o CNPJ da empresa"),
        email: prompt("Qual o Email da empresa"),
        telefone: prompt("Qual o telefone da empresa"),
        produtosEmpresa: prompt("Qual o nome dos produtos da empresa"),
    };
    fornecedores.push(fornecedor);
    console.log("Fornecedor cadastrado com sucesso:", fornecedor);
}

function listarFornecedores() {
    console.log("Lista de fornecedores:");
    fornecedores.forEach(fornecedor => {
        console.log(fornecedor);
    });
}

function removerFornecedor() {
    let IDfornecedor = parseInt(prompt("Qual o ID do Fornecedor: "));
    fornecedores.splice(IDfornecedor, 1);
    console.log("Fornecedor removido com sucesso ");
}



/*  --------- SEQUÊNCIA DE VALIDAÇÃO E TESTE DO CÓDIGO --------- */


console.log('******+++*******');
console.log('Sistema de controle de estoque');
console.log('******+++*******');

/* 01 - Processo de cadastro de 6 usuários */

    cadastrarUsuarios();


/* 02 - Listar todos usuários cadastrados, com todas informações */
listarUsuarios();

/* 03 - Remover 1 dos usuários, qualquer um deles e depois listar novamente eles
        para ver se o usuário foi removido. */
removerUsuario();
listarUsuarios();

/* 04 - Alterar algum dado do usuário */
alterarDadoUsuario();

/* 05 - Fazer login com um dos usuários cadastrados */
logarUsuario();

/* 06 - Cadastrar pelo menos 15 produtos */
adicionarProduto();

/* 07 - Consultar validade individualmente de um produto */
validadeIndividual();

/* 08 - Consultar validade de todos os produtos em formato relatório */
imprimirRelatorioValidades();

/* 09 - Remover pelo menos 5 produtos */
removerProduto();

/* 10 - Atualizar a quantidade de pelo menos 5 produtos */
atualizarQuantidade();

/* 11 - Cadastrar fornecedor, no minimo 3 */
cadastrarFornecedor();

/* 12 - Listar fornecedores */
listarFornecedores();

/* 13 - Remover 1 fornecedor e depois imprimir a lista completa */
removerFornecedor();
listarFornecedores();
