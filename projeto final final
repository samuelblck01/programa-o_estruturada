/* ************* VARIÁVEIS GLOBAIS ********* */

let estoque = [];
let usuarios = [];
let fornecedores = [];

/* ************* FUNÇÕES ********* */

function cadastrarUsuarios() {
    
        let usuario = {
            nomeDoUsuario: prompt("Digite seu nome:"),
            cpf: prompt("Digite seu CPF:"),
            email: prompt("Digite seu Email:"),
            senha: prompt("Crie sua senha:"),
            cargo: prompt("Digite seu cargo:")
        };
        usuarios.push(usuario);
        console.log("Usuário cadastrado com sucesso:", usuario);
}


let fakeusuarios = [
    {
        nomeDoUsuario: "Usuário1",
        cpf: "111.111.111-11",
        email: "usuario1@example.com",
        senha: "senha123",
        cargo: "Cargo1"
    },
    {
        nomeDoUsuario: "Usuário2",
        cpf: "222.222.222-22",
        email: "usuario2@example.com",
        senha: "senha456",
        cargo: "Cargo2"
    },
    {
        nomeDoUsuario: "Usuário3",
        cpf: "333.333.333-33",
        email: "usuario3@example.com",
        senha: "senha789",
        cargo: "Cargo3"
    },
    {
        nomeDoUsuario: "Usuário4",
        cpf: "444.444.444-44",
        email: "usuario4@example.com",
        senha: "senhaabc",
        cargo: "Cargo4"
    },
    {
        nomeDoUsuario: "Usuário5",
        cpf: "555.555.555-55",
        email: "usuario5@example.com",
        senha: "senhaxyz",
        cargo: "Cargo5"
    }
];

var produto1 = {
    nome: "Laptop Ultra X",
    peso: "1.5 kg",
    setor: "Tecnologia",
    marca: "TechMaster",
    validade: "N/A",
    quantidade: 500
};

var produto2 = {
    nome: "Mochila Trekker Pro",
    peso: "1.2 kg",
    setor: "Acessórios de Viagem",
    marca: "ExploreGear",
    validade: "N/A",
    quantidade: 300
};

var produto3 = {
    nome: "Óleo de Coco Orgânico",
    peso: "500g",
    setor: "Alimentos e Bebidas",
    marca: "Nature's Bounty",
    validade: "2 anos",
    quantidade: 1000
};

var produto4 = {
    nome: "Camiseta DryFit Elite",
    peso: "200g",
    setor: "Vestuário Esportivo",
    marca: "FitStyle",
    validade: "N/A",
    quantidade: 200
};

// Array contendo os objetos de produtos
var produtosadcionados = [produto1, produto2, produto3, produto4];
estoque.push(produtosadcionados)

// Definição dos objetos de fornecedor
var fornecedor1 = {
    nomeDaEmpresa: "TechCorp",
    cnpj: "12345678901234",
    email: "contato@techcorp.com",
    telefone: "(00) 1234-5678",
    produtosEmpresa: [produto1, produto2]
};

var fornecedor2 = {
    nomeDaEmpresa: "Nature's Distribuidora",
    cnpj: "98765432109876",
    email: "contato@naturesdistribuidora.com",
    telefone: "(00) 9876-5432",
    produtosEmpresa: [produto3]
};

var fornecedor3 = {
    nomeDaEmpresa: "FitStyle Comércio",
    cnpj: "56789012345678",
    email: "contato@fitstyle.com",
    telefone: "(00) 5678-9012",
    produtosEmpresa: [produto4]
}; 

var fornecedoresfake = [fornecedor1, fornecedor2, fornecedor3]

fornecedores.push(fornecedoresfake)

usuarios.push(fakeusuarios)
console.log(fornecedores)
console.log(estoque)


function validarEmail(email) {
    var regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
}

function validarSenha(senha) {
    return senha.length >= 8;
}

function listarUsuarios() {
    alert(usuarios)
}



function removerUsuario() {
    let IDusuario = parseInt(prompt("Qual o ID do usuário que será removido : "));
    if (IDusuario >= 0 && IDusuario < usuarios.length) {
        usuarios.splice(IDusuario, 1);
        alert(`O usuário de ID: ${IDusuario} foi removido com sucesso.`);
    } else {
        alert("ID de usuário inválido.");
    }
}

function alterarDadoUsuario() {
    let IDusuario = parseInt(prompt("Qual é o ID do usuário que desejas alterar :"));
    if (IDusuario >= 0 && IDusuario < usuarios.length) {
        let usuarioModificado = {
            nomeDoUsuario: prompt("Qual o novo nome:"),
            cpf: prompt("Qual o novo cpf:"),
            email: prompt("Qual o novo email:"),
            senha: prompt("Qual o novo senha:"),
            cargo: prompt("Qual o novo cargo:")
        };
        usuarios[IDusuario] = usuarioModificado;
        alert("Usuário alterado com sucesso:", usuarioModificado);
    } else {
        console.log("ID de usuário inválido.");
    }
}

function logarUsuario() {
    let loginusuario = prompt("Qual seu email :");
    let loginsenha = prompt("Qual sua senha: ");

    let usuarioEncontrado = usuarios.find(usuario => usuario.email === loginusuario && usuario.senha === loginsenha);
    if (usuarioEncontrado) {
        alert("Login válido. Acesso permitido.");
    } else {
        alert("Login inválido. Acesso negado.");
    }
}

function adicionarProduto() {

    let produto = {
        nome: prompt("Qual o nome do produto :"),
        peso: prompt("Qual o peso do produto :"),
        setor: prompt("Qual o setor do produto :"),
        marca: prompt("Qual a marca do produto :"),
        validade: prompt("Qual a validade do produto :"),
        quantidade: prompt("Qual a quantidade desse produto : ")
    };
    estoque.push(produto);
    alert("Produto adicionado com sucesso:", produto);
}

function validadeIndividual() {
    let nome = prompt("Digite o nome do produto para consultar sua validade:");
    let produtoEncontrado = estoque.find(produto => produto.nome === nome);
    if (produtoEncontrado) {
       alert`A validade do produto ${nome} é: ${produtoEncontrado.validade}`;
    } else {
        alert `Produto ${nome} não encontrado no estoque`;
    }
}

function imprimirRelatorioValidades() {
    alert("Validades dos produtos em estoque:");
    estoque.forEach(produto => {
        alert(`${produto.nome} (${produto.marca}, ${produto.setor}): ${produto.validade}`);
    });
}

function removerProduto() {
    let nome = prompt("Digite o nome do produto que deseja remover:");
    let index = estoque.findIndex(produto => produto.nome === nome);
    if (index !== -1) {
        estoque.splice(index, 1);
        alert(`O Produto ${nome} foi removido com sucesso.`);
    } else {
       alert(`Produto ${nome} não encontrado.`);
    }
}

function atualizarQuantidade() {
    let nome = prompt("Digite o nome do produto para atualizar sua quantidade:");
    let novaQuantidade = parseInt(prompt("Digite a nova quantidade do produto:"));

    let produtoEncontrado = estoque.find(produto => produto.nome === nome);
    if (produtoEncontrado) {
        produtoEncontrado.quantidade = novaQuantidade;
        alert(`Quantidade do produto ${nome} modificada para ${novaQuantidade}`);
    } else {
        alert(`Produto ${nome} não encontrado.`);
    }
}

function cadastrarFornecedor() {
    let fornecedor = {
        nomeDaEmpresa: prompt("Qual o nome da empresa"),
        cnpj: prompt("Qual o CNPJ da empresa"),
        email: prompt("Qual o Email da empresa"),
        telefone: prompt("Qual o telefone da empresa"),
        produtosEmpresa: prompt("Qual o nome dos produtos da empresa"),
    };
    fornecedores.push(fornecedor);
    alert("Fornecedor cadastrado com sucesso:", fornecedor);
}

function listarFornecedores() {
    alert(fornecedores)
}

function removerFornecedor() {
    let IDfornecedor = parseInt(prompt("Qual o ID do Fornecedor: "));
    if (IDfornecedor >= 0 && IDfornecedor < fornecedores.length) {
        fornecedores.splice(IDfornecedor, 1);
        console.log("Fornecedor removido com sucesso ");
    } else {
        console.log("ID de fornecedor inválido.");
    }
}

/*  --------- SEQUÊNCIA DE VALIDAÇÃO E TESTE DO CÓDIGO --------- */

console.log('******+++*******');
console.log('Sistema de controle de estoque');
console.log('******+++*******');

/* 01 - Processo de cadastro de 6 usuários */
cadastrarUsuarios();

/* 02 - Listar todos usuários cadastrados, com todas informações */
listarUsuarios();

/* 03 - Remover 1 dos usuários, qualquer um deles e depois listar novamente eles
        para ver se o usuário foi removido. */
      
removerUsuario();
listarUsuarios();

/* 04 - Alterar algum dado do usuário */
alterarDadoUsuario();

/* 05 - Fazer login com um dos usuários cadastrados */
logarUsuario();

/* 06 - Cadastrar pelo menos 15 produtos */
adicionarProduto();


/* 07 - Consultar validade individualmente de um produto */
console.log(validadeIndividual());

/* 08 - Consultar validade de todos os produtos em formato relatório*/


/*var regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;: Declara uma expressão regular que define o padrão que um endereço de e-mail válido deve seguir. Vamos quebrar essa expressão regular em partes:

^: Indica que a correspondência deve começar no início da string.
[^\s@]+: Corresponde a um ou mais caracteres que não são espaços em branco ou o símbolo "@".
@: Corresponde literalmente ao símbolo "@".
[^\s@]+: Corresponde a um ou mais caracteres que não são espaços em branco ou o símbolo "@".
\.: Corresponde literalmente a um ponto ".". Como o ponto é um caractere especial em expressões regulares, ele é precedido por uma barra invertida para indicar que queremos corresponder literalmente a um ponto.
[^\s@]+: Corresponde a um ou mais caracteres que não são espaços em branco ou o símbolo "@".
$: Indica que a correspondência deve terminar no final da string.*/
