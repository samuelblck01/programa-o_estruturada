/* ************* VARIÁVEIS GLOBAIS ********* */

// Variável de controle do estoque a partir de vendas e compras
let estoque = []; // Este array deve possuir objetos
let usuarios = []; // Este array deve possuir objetos
let Fornecedores = [];



/* ************* FUNÇÕES ********* */



/* ************* FUNÇÕES ********* */

function cadastrarUsuarios(usuario) {
    console.log("Usuário cadastrado com sucesso:");
    console.log(objeto);
   for(let i =0; i < 7; i++){ /* Aqui vocês implementam o código referente a função */
        let usuario = {
            nomeDoUsuario: prompt("Digite seu nome:"),
            cpf: prompt("Digite seu CPF:"),
            email: prompt("Digite seu Email:"),
            senha: prompt("Crie sua senha:"),
            cargo: prompt("Digite seu cargo:")
        };
}
}

usuarios.push(cadastrarUsuarios.usuario);




function validarEmail(email) {
    // Expressão para validar e-mail
    var regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
}

function validarSenha(senha) {
    // Verifica se a senha tem pelo menos 8 caracteres
    return senha.length >= 8;
}

function listarUsuarios(validacao) {
    // Verifica se o e-mail é válido
    if (validarEmail(validacao.email)) {
        console.log("O email é válido");
    } else {
        console.log("O email é inválido");
    }
    
    console.log(usuarios);

    // Verifica se a senha é válida
    if (validarSenha(validacao.senha)) {
        console.log("A senha é válida");
    } else {
        console.log("A senha deve ter pelo menos 8 caracteres");
    }
}

listarUsuarios(usuario);

function removerUsuario() {
    let IDusuario = prompt("Qual o ID do usuário que será removido : ");
    usuarios.splice(IDusuario, 1);
    console.log(`O usuário de ID: ${IDusuario} foi removido com sucesso.`);
}

function alterarDadoUsuario() {
    let IDusuario = prompt("Qual é o ID do usuário que desejas alterar :");
    let usuarioModificado = {
        nome: prompt("Qual o novo nome:"),
        cpf: prompt("Qual o novo cpf:"),
        email: prompt("Qual o novo email:"),
        senha: prompt("Qual o novo senha:"),
        cargo: prompt("Qual o novo cargo:")
    };

    // Substituir o usuário no array pelo usuário modificado
    usuarios[IDusuario] = usuarioModificado;
}

alterarDadoUsuario();
console.log("Usuário alterado com sucesso:", usuarios);


function logarUsuario() {
    /* 
       Aqui vocês implementam o código referente a função
       Usar IFs para verificar se o e-mail e senha estão corretos.
    */
   let loginusuario = prompt("Qual seu email :")
   let loginsenha = prompt("Qual sua senha: ")

   for (let i = 0; i< usuarios.length; i++){
    if (usuarios[i].email === logarUsuario && usuarios[i].senha === loginsenha){
        console.log("login válido. Acesso permitido.")
    }else {
        console.log("Login inválido. Acesso negado.")
    }
   }
   
}
logarUsuario()

function adicionarProduto() {
    /* 
       Aqui vocês implementam o código referente a função 
    */
   console.log(produtos)
   console.log("Produto adicionado com sucesso.")
}
let produtos = {
    nome: prompt("Qual o nome do produto :"),
    peso: prompt("Qual o peso do produto :"),
    setor: prompt("Qual o setor do produto :"),
    marca: prompt("Qual a marca do produto :"),
    validade: prompt("Qual a validade do produto :"),
    quantide:prompt("Qual a quantidade desse produto : ")
    
}
estoque.push(produtos)

function validadeIndividual() {
    
    function validadeIndividual() {
        let nome = prompt("Digite o nome do produto para consultar sua validade:");
        
        // Percorrer o array estoque para encontrar o produto
        for (let i = 0; i < estoque.length; i++) {
            if (estoque[i].nome === nome) {
                // Se encontrarmos o produto, retornamos sua validade
                return `A validade do produto ${nome} é ${estoque[i].validade}`;
            }
        }
        
        // Se o produto não for encontrado, retornamos uma mensagem indicando isso
        return `Produto ${nome} não encontrado no estoque`;
    }
    
    
    


}

function imprimirRelatorioValidades() {
    /* 
       Aqui vocês implementam o código referente a função 
    */
   console.log("Validades dos produtos em estoque:");
   
   // Percorrer o array estoque e imprimir as validades de cada produto
   estoque.forEach(produto => {
       console.log(`${produtos.nome} (${produtos.marca}, ${produtos.setor}): ${produtos.validade}`);
   });
   // Chamada da função para imprimir as validades do estoque no console
   imprimirValidadesDoEstoque();
   
}
imprimirValidadesDoEstoque();

function removerProduto() {
    let nome = prompt("Digite o nome do produto que deseja remover:");

    /* 
       Aqui vocês implementam o código referente a função 
    */
       let IDproduto = prompt("Qual o ID do Produto que será removido : ");
       usuarios.splice(IDproduto, 1);
       console.log(`O Produto de ID: ${IDproduto} foi removido com sucesso.`);
   
}

function atualizarQuantidade(nome, quantidadenova, produtoEncontrado) {
    let nome = prompt("Digite o nome do produto para atualizar sua quantidade:");
    let quantidadenova = parseInt(prompt("Digite a nova quantidade do produto:"));
    /* 
       Aqui vocês implementam o código referente a função 
    */
       let produtoEncontrado = false;
       for (let i = 0; i < estoque.length; i++) {
           if (estoque[i].nome === nomeProduto) {
               // Modificar a quantidade do produto
               estoque[i].quantidade = novaQuantidade;
               produtoEncontrado = true;
               console.log(`Quantidade do produto ${nome} modificada para ${quantidadenova}`);
               break;
   
            }
       }    
}

function cadastrarFornecedor() {
    console.log(Fornecedor)
    console.log("Fornecedor cadastrado com sucesso. ")
    /* 
       Aqui vocês implementam o código referente a função 
    */
}

let Fornecedor = {
    nomeDaEmpresa:prompt("Qual o nome da empresa"),
    cnpj:prompt("Qual o CNPJ da empresa"),
    email:prompt("Qual o Email da empresa"),
    telefone:prompt("Qual o telefone da empresa"),
    produtosEmpresa:prompt("Qual o nome da empresa"),
    nomeDaEmpresa:prompt("Qual o nome da empresa"),
}
Fornecedores.push(Fornecedor)

function listarFornecedores() {
    /* 
       Aqui vocês implementam o código referente a função
       Usar IFs para verificar se o e-mail e senha estão corretos.
    */
   for(let i = o; i < Fornecedores.length;){       
    Fornecedores.forEach(produto => {
        console.log(`${Fornecedor.produtosEmpresa} (${Fornecedor.cnpj}, ${Fornecedor.email}, ${Fornecedor.telefone}): ${Fornecedor.nomeDaEmpresa}`);
    });
   }
}

function removerFornecedor() {
    /* 
       Aqui vocês implementam o código referente a função
       Usar IFs para verificar se o e-mail e senha estão corretos.
    */
   let IDfornecedor = prompt("Qual o ID do Fornecedor: ")
   Fornecedores.splice[IDfornecedor]
   console.log("Fornecedor removido com sucesso ")
}


/*  --------- SEQUÊNCIA DE VALIDAÇÃO E TESTE DO CÓDIGO --------- */


console.log('******+++*******');
console.log('Sistema de controle de estoque');
console.log('******+++*******');

/* 01 - Processo de cadastro de 6 usuários */
for (let i = 0; i < 6; i++) {
    cadastrarUsuarios();
}

/* 02 - Listar todos usuários cadastrados, com todas informações */
listarUsuarios();

/* 03 - Remover 1 dos usuários, qualquer um deles e depois listar novamente eles
        para ver se o usuário foi removido. */
removerUsuario();
listarUsuarios();

/* 04 - Alterar algum dado do usuário */
alterarDadoUsuario();

/* 05 - Fazer login com um dos usuários cadastrados */
logarUsuario();

/* 06 - Cadastrar pelo menos 15 produtos */
adicionarProduto();

/* 07 - Consultar validade individualmente de um produto */
validadeIndividual();

/* 08 - Consultar validade de todos os produtos em formato relatório */
imprimirRelatorioValidades();

/* 09 - Remover pelo menos 5 produtos */
removerProduto();

/* 10 - Atualizar a quantidade de pelo menos 5 produtos */
atualizarQuantidade();

/* 11 - Cadastrar fornecedor, no minimo 3 */
cadastrarFornecedor();

/* 12 - Listar fornecedores */
listarFornecedores();

/* 13 - Remover 1 fornecedor e depois imprimir a lista completa */
removerFornecedor();
listarFornecedores();
